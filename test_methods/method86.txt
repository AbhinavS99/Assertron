[[[public void display(GLAutoDrawable drawable) {
    GL2 gl = drawable.getGL().getGL2();
    if (color != null) {
        gl.glClearColor(color.getRed() / 255f, color.getGreen() / 255f, color.getBlue() / 255f, 1f);
        gl.glClear(GL2.GL_COLOR_BUFFER_BIT);
    } else if (buffer != null) {
        if (isResizable() && needInitialResize) {
            int w = (int) Math.round(width * initialScale);
            int h = (int) Math.round(height * initialScale);
            setCanvasSize(w, h);
        }
        gl.glWindowPos2i(0, canvas.getHeight());
        gl.glPixelZoom((float) canvas.getWidth() / width, -(float) canvas.getHeight() / height);
        // XXX: Tell OpenGL about the alignment of buffer via glPixelStore(), somehow...
        gl.glDrawPixels(width, height, format, type, buffer);
    } else if (renderBuffer > 0) {
        gl.glBindRenderbuffer(GL2.GL_RENDERBUFFER, renderBuffer);
        gl.glGetRenderbufferParameteriv(GL2.GL_RENDERBUFFER, GL2.GL_RENDERBUFFER_WIDTH, params, 0);
        gl.glGetRenderbufferParameteriv(GL2.GL_RENDERBUFFER, GL2.GL_RENDERBUFFER_HEIGHT, params, 1);
        if (isResizable() && needInitialResize) {
            int w = (int) Math.round(params[0] * initialScale);
            int h = (int) Math.round(params[1] * initialScale);
            setCanvasSize(w, h);
        }
        gl.glBindFramebuffer(GL2.GL_READ_FRAMEBUFFER, frameBuffer);
        gl.glFramebufferRenderbuffer(GL2.GL_READ_FRAMEBUFFER, GL2.GL_COLOR_ATTACHMENT0, GL2.GL_RENDERBUFFER, renderBuffer);
        // Often GL_RENDERBUFFER_WIDTH == 0 and GL_RENDERBUFFER_HEIGHT == 1,
        // while glCheckFramebufferStatus() returns
        // GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT here,
        // but, for a given object, it either never happens or
        // always happens ... NVIDIA driver bug?
        // System.out.println(params[0] + " " + params[1] +
        // " glCheckFramebufferStatus = " + gl.glCheckFramebufferStatus(GL2.GL_READ_FRAMEBUFFER));
        assert gl.glCheckFramebufferStatus(GL2.GL_READ_FRAMEBUFFER) == GL2.GL_FRAMEBUFFER_COMPLETE;
        gl.glBlitFramebuffer(0, 0, params[0], params[1], 0, canvas.getHeight(), canvas.getWidth(), 0, GL2.GL_COLOR_BUFFER_BIT, GL2.GL_LINEAR);
    }
}]]],