[[[// --- copy_check_and_promote --------------------------------------------
private void copy_check_and_promote(int workdone) {
    int oldlen = _keys.length;
    // We made a slot unusable and so did some of the needed copy work
    long copyDone = _copyDone;
    long nowDone = copyDone + workdone;
    assert nowDone <= oldlen;
    if (workdone > 0) {
        while (!_copyDoneUpdater.compareAndSet(this, copyDone, nowDone)) {
            // Reload, retry
            copyDone = _copyDone;
            nowDone = copyDone + workdone;
            assert nowDone <= oldlen;
        }
        // if( (10*copyDone/oldlen) != (10*nowDone/oldlen) )
        // System.out.print(" "+nowDone*100/oldlen+"%"+"_"+(_copyIdx*100/oldlen)+"%");
    }
    // Check for copy being ALL done, and promote.  Note that we might have
    // nested in-progress copies and manage to finish a nested copy before
    // finishing the top-level copy.  We only promote top-level copies.
    if (// Ready to promote this table?
    nowDone == oldlen && // Looking at the top-level table?
    _nbhml._chm == this && // Attempt to promote
    _nbhml.CAS(_chm_offset, this, _newchm)) {
        // Record resize time for next check
        _nbhml._last_resize_milli = System.currentTimeMillis();
        // long nano = System.nanoTime();
        // System.out.println(" "+nano+" Promote table "+oldlen+" to "+_newchm._keys.length);
        // System.out.print("_"+oldlen+"]");
    }
}]]],